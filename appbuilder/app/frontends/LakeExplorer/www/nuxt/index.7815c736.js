import{a as p,A as m,o as c,e as l,f as a,u as o,M as u,N as _,O as w,Q as x,R as F,c as D,$ as v,h as $,w as b,k as f,l as k,p as A,m as S}from"./entry.c86999db.js";import{d as B,u as N}from"./localDatabase.77e935a8.js";const O={key:0},C={key:0},I={key:0},L=p({__name:"DatasetTableRow",props:{dataset:null},setup(r){const t=r,s=m(()=>{const n=t.dataset.observationForm.taxonomicReference;return t.dataset.data[n]}),e=m(()=>{const n=t.dataset.observationForm.geographicReference;return t.dataset.data[n]}),i=m(()=>{const n=t.dataset.observationForm.temporalReference;if(t.dataset.data[n]){const d=t.dataset.data[n];return B.exports.unix(d.cron.timestamp).format("DD.MM.YYYY HH:mm")}});return(n,d)=>(c(),l("tr",null,[a("td",null,[o(s)?(c(),l("div",O,u(o(s).taxonLatname),1)):_("",!0)]),a("td",null,[o(e)?(c(),l("div",C,u(o(e).lat)+", "+u(o(e).lng),1)):_("",!0)]),a("td",null,[o(i)?(c(),l("div",I,u(o(i)),1)):_("",!0)]),a("td",null,[w(n.$slots,"actions")])]))}}),R={class:"overflow-x-auto w-full"},T={class:"table w-full"},V=a("thead",null,[a("tr",null,[a("th",null,"Art"),a("th",null,"Ort"),a("th",null,"Datum"),a("th")])],-1),Y=p({__name:"DatasetTable",props:{datasets:null},setup(r){return(t,s)=>(c(),l("div",R,[a("table",T,[V,a("tbody",null,[(c(!0),l(x,null,F(r.datasets,(e,i)=>(c(),D(L,{key:i,dataset:e},null,8,["dataset"]))),128))])])]))}}),H=()=>{const r=v();return{async head(t){try{await r(`/observation-forms/${t.uuid}/${t.version}`,{method:"HEAD"})}catch{return!1}return!0},async post(t){try{await r("/observation-forms/",{method:"POST",body:{uuid:t.uuid,version:t.version,definition:t}})}catch{return!1}return!0}}},M=()=>{const r=v();return{async upload(t){return t.map(async e=>await this.post(e)).every(e=>!!e)},async post(t){const s=H(),e=$();await e.loadSettings(),await s.head(t.observationForm)||await s.post(t.observationForm);const i={data:t.data,appUuid:e.appUuid,clientPlatformId:device.platform,clientId:e.generateUuid(),observationForm:{uuid:t.observationForm.uuid,version:t.observationForm.version}};try{await r("/datasets/",{method:"POST",body:i})}catch{return!1}return!0}}},P={class:"flex flex-row items-center m-4"},U=a("h1",{class:"grow"}," Lokale Beobachtungen ",-1),E=["disabled"],q=p({__name:"index",async setup(r){let t,s;const e=([t,s]=b(()=>N()),t=await t,s(),t),i=M(),n=([t,s]=b(()=>e.datasets.getAll()),t=await t,s(),t),d=m(()=>navigator.onLine),y=async()=>{const h=await e.datasets.getAll();await i.upload(h)};return(h,j)=>{const g=A;return c(),l("div",null,[a("div",P,[U,a("div",null,[a("button",{class:"btn btn-secondary mr-2",disabled:!o(d)||o(n).length===0,onClick:y}," Beobachtungen synchronisieren ",8,E),f(g,{to:{name:"report-new"},class:"btn btn-primary"},{default:k(()=>[S(" Neue Beobachtung anlegen ")]),_:1})])]),f(Y,{datasets:o(n)},null,8,["datasets"])])}}});export{q as default};
