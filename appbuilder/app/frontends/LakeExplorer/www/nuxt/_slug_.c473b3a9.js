var he=Object.defineProperty;var pe=(s,e,t)=>e in s?he(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var Z=(s,e,t)=>(pe(s,typeof e!="symbol"?e+"":e,t),t);import{a as E,o as u,e as m,f as d,M as A,q as R,A as T,u as P,T as oe,O as ae,c as _,l as L,Q as U,R as V,U as le,k as G,r as B,j as ee,s as te,V as ne,t as ie,N as ce,B as ve,F as me,W as ge,y as fe,x as Pe,w as be,X as Ee}from"./entry.c86999db.js";import{_ as xe}from"./MobileNatureGuideNavigation.vue_vue_type_script_setup_true_lang.bbc77cad.js";import{_ as De}from"./_plugin-vue_export-helper.af303bb4.js";import{_ as se}from"./Icon.vue_vue_type_script_setup_true_lang.508827c7.js";import{_ as $e}from"./Modal.vue_vue_type_script_setup_true_lang.09854033.js";import{u as Se}from"./nature-guides.8545fcc0.js";const _e=d("div",{class:"flex flex-col align-center"},[d("span",{class:"text-center text-[#00A7B4] font-black text-2xl leading-6"},"1/4"),d("span",{class:"text-center text-black font-medium text-xs"},"Punkte")],-1),we={class:"py-2 px-4 grow font-black text-lg md:text-base"},Ie=["src","alt"],Ge=E({__name:"IdentificationKeyReference",props:{reference:null},emits:["select"],setup(s){return(e,t)=>(u(),m("div",{class:R(["flex flex-row items-center cursor-pointer gap-2 my-2 p-4 shadow rounded-xl",{"border-transparent":s.reference.isVisible,"border-red-500":!s.reference.isVisible}]),onClick:t[0]||(t[0]=n=>e.$emit("select",s.reference))},[_e,d("div",we,A(s.reference.name),1),d("img",{class:"w-16 h-16 rounded-lg",src:`/${s.reference.imageUrl}`,alt:s.reference.name},null,8,Ie)],2))}}),X=()=>({classesForSpace:s=>({"shadow-xl shadow-neutral-50":!s.isSelected,"border-primary":s.isSelected,"opacity-30 border-transparent":!s.isPossible,"border-transparent":s.isPossible&&!s.isSelected})}),Be=E({__name:"ColorFilterSpace",props:{space:null},setup(s){const e=s,t=T(()=>{const o=e.space.encodedSpace;return`rgba(${o[0]}, ${o[1]}, ${o[2]}, ${o[3]})`}),n=X(),i=T(()=>n.classesForSpace(e.space)),r=()=>{e.space.isSelected?e.space.deselect():e.space.select()};return(o,a)=>(u(),m("div",{class:"flex flex-col",onClick:r},[d("div",{class:R(["w-full h-16 border-solid border-white border-8 rounded-3xl relative",P(i)]),style:oe({"background-color":P(t)})},null,6)]))}}),Ce={},Me={class:"grid grid-cols-2 gap-x-4 gap-y-8 sm:grid-cols-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5"};function ye(s,e){return u(),m("div",Me,[ae(s.$slots,"default")])}const H=De(Ce,[["render",ye]]),Ae=E({__name:"ColorFilter",props:{filter:null},setup(s){return(e,t)=>(u(),_(H,null,{default:L(()=>[(u(!0),m(U,null,V(s.filter.space,n=>(u(),_(Be,{key:n.spaceIdentifier,space:n},null,8,["space"]))),128))]),_:1}))}}),Te=["alt","src"],Ue=E({__name:"DescriptiveTextAndImagesFilterSpace",props:{space:null},setup(s){const e=s,t=X(),n=T(()=>t.classesForSpace(e.space)),i=()=>{e.space.isSelected?e.space.deselect():e.space.select()};return(r,o)=>{const a=le("GlossaryTranslatable");return u(),m("div",{class:"flex flex-col",onClick:i},[d("img",{alt:s.space.matrixFilter.name,src:`/${s.space.imageUrl}`,class:R(["w-full border-solid border-white border-8 rounded-3xl relative",P(n)])},null,10,Te),G(a,{value:s.space.encodedSpace,class:"font-medium mt-3"},null,8,["value"])])}}}),Ve=E({__name:"DescriptiveTextAndImagesFilter",props:{filter:null},setup(s){return(e,t)=>(u(),_(H,null,{default:L(()=>[(u(!0),m(U,null,V(s.filter.space,n=>(u(),_(Ue,{key:n.spaceIdentifier,space:n},null,8,["space"]))),128))]),_:1}))}}),Re={key:0},Le=["min"],ke=["max"],Ne=E({__name:"RangeFilter",props:{filter:null},setup(s){const e=s,t=B(e.filter.encodedSpace[0]),n=B(e.filter.encodedSpace[0]),i=()=>Math.max(t.value,e.filter.encodedSpace[0]),r=()=>Math.min(n.value,e.filter.encodedSpace[1]),o=()=>{e.filter.selectSpace({min:t.value,max:n.value})};return ee(()=>t,o),ee(()=>n,o),(a,l)=>(u(),m("div",null,[s.filter.encodedSpace?(u(),m("div",Re,[te(d("input",{"onUpdate:modelValue":l[0]||(l[0]=h=>ie(t)?t.value=h:null),type:"range",min:s.filter.encodedSpace[0],max:r,class:"range"},null,8,Le),[[ne,P(t),void 0,{number:!0}]]),te(d("input",{"onUpdate:modelValue":l[1]||(l[1]=h=>ie(n)?n.value=h:null),type:"range",min:i,max:s.filter.encodedSpace[1],class:"range"},null,8,ke),[[ne,P(n),void 0,{number:!0}]])])):ce("",!0)]))}}),Oe=E({__name:"NumberFilterSpace",props:{space:null},setup(s){const e=s,t=X(),n=T(()=>t.classesForSpace(e.space)),i=()=>{e.space.isSelected?e.space.deselect():e.space.select()};return(r,o)=>(u(),m("div",{class:"flex flex-col",onClick:i},[d("div",{class:R(["w-full h-32 flex items-center justify-center text-center border-solid border-white border-8 rounded-3xl relative",P(n)])},A(s.space.encodedSpace),3)]))}}),Fe=E({__name:"NumberFilter",props:{filter:null},setup(s){return(e,t)=>(u(),_(H,null,{default:L(()=>[(u(!0),m(U,null,V(s.filter.space,n=>(u(),_(Oe,{key:n.spaceIdentifier,space:n},null,8,["space"]))),128))]),_:1}))}}),ze=E({__name:"TextOnlyFilterSpace",props:{space:null},setup(s){const e=s,t=X(),n=T(()=>t.classesForSpace(e.space)),i=()=>{e.space.isSelected?e.space.deselect():e.space.select()};return(r,o)=>{const a=le("GlossaryTranslatable");return u(),m("div",{class:"flex flex-col",onClick:i},[d("div",{class:R(["w-full h-32 flex items-center justify-center text-center border-solid border-white border-8 rounded-3xl relative",P(n)])},[G(a,{value:s.space.encodedSpace},null,8,["value"])],2)])}}}),Xe=E({__name:"TextOnlyFilter",props:{filter:null},setup(s){return(e,t)=>(u(),_(H,null,{default:L(()=>[(u(!0),m(U,null,V(s.filter.space,n=>(u(),_(ze,{key:n.spaceIdentifier,space:n},null,8,["space"]))),128))]),_:1}))}}),He=E({__name:"TaxonFilter",props:{filter:null},setup(s){return(e,t)=>(u(),m("div",null," TaxonFilter Filter! "))}}),Ye={class:"mb-8"},je={class:"font-black text-xl"},qe=E({__name:"MatrixFilter",props:{filter:null},setup(s){const e=t=>{switch(t){case"ColorFilter":return Ae;case"DescriptiveTextAndImagesFilter":return Ve;case"RangeFilter":return Ne;case"NumberFilter":return Fe;case"TextOnlyFilter":return Xe;case"TaxonFilter":return He}};return(t,n)=>(u(),m("div",Ye,[d("h3",je,A(s.filter.name),1),(u(),_(ve(e(s.filter.type)),{filter:s.filter},null,8,["filter"]))]))}}),Je={class:"inline-flex relative items-center cursor-pointer"},Ke={class:"grid grid-cols-2 gap-4 h-12 items-center bg-white rounded-full border-4 border-primary"},Qe=["checked"],We=d("div",{class:"transition-all h-12 w-1/2 bg-primary absolute rounded-full peer-checked:translate-x-[calc(100%-4px)]"},null,-1),Ze={class:"transition-colors z-10 text-white peer-checked:text-primary px-2"},et={class:"transition-colors z-10 text-primary peer-checked:text-white px-2"},tt=E({__name:"FormToggle",props:{value:{type:Boolean,default:!1},labelOff:{type:String,default:""},labelOn:{type:String,default:""}},emits:["toggle"],setup(s){return(e,t)=>(u(),m("label",Je,[d("div",Ke,[d("input",{type:"checkbox",class:"sr-only peer",checked:s.value,onChange:t[0]||(t[0]=n=>e.$emit("toggle",n.target.checked))},null,40,Qe),We,d("div",Ze,A(s.labelOn),1),d("div",et,A(s.labelOff),1)])]))}}),nt={class:"fixed bottom-[12vh] w-full px-8 z-10 flex justify-center"},it={class:"flex gap-2 md:bg-primary md:rounded-full md:px-4"},st={class:"btn btn-circle btn-primary text-white"},rt=["disabled"],ot=["src","alt"],at=E({__name:"NatureGuideFilters",props:{node:null,tabShowing:null},emits:["toggle-tab"],setup(s){const e=B(!1),t=()=>{window.scrollTo({top:0,behavior:"smooth"})};return(n,i)=>(u(),m("div",nt,[d("div",it,[d("button",st,[G(se,{name:"undo",size:22})]),G(tt,{value:s.tabShowing==="results","label-off":"Merkmale","label-on":"Ergebnis",class:"md:hidden",onToggle:i[0]||(i[0]=r=>n.$emit("toggle-tab"))},null,8,["value"]),d("button",{disabled:!s.node.overviewImage,class:"btn btn-circle btn-primary text-white",onClick:i[1]||(i[1]=r=>e.value=!0)},[G(se,{name:"guide",size:22})],8,rt),d("button",{class:"hidden md:block btn btn-circle btn-primary text-white",onClick:t}," Up ")]),G($e,{open:P(e),actions:!1,onClose:i[2]||(i[2]=r=>e.value=!1)},{default:L(()=>[d("img",{src:s.node.overviewImage,alt:s.node.name,class:"w-full aspect-square"},null,8,ot)]),_:1},8,["open"])]))}});let f;(function(s){s.None="0",s.Left="left",s.Right="right",s.Up="up",s.Down="down"})(f||(f={}));const z=Object.freeze({Horizontal:[f.Left,f.Right],Vertical:[f.Up,f.Down],All:[f.Left,f.Right,f.Up,f.Down,f.None]});let g;(function(s){s.Inactive="inactive",s.Active="active",s.Blocked="blocked"})(g||(g={}));let w;(function(s){s.NoPointer="nopointer",s.SinglePointer="singlepointer",s.DualPointer="dualpointer"})(w||(w={}));let I;(function(s){s.NoActiveGesture="noactivegesture",s.ActiveGesture="activegesture"})(I||(I={}));class M{constructor(e,t){this.x=e,this.y=t}}class S{constructor(e,t){this.startPoint=e,this.endPoint=t,this.direction=f.None,this.deltaX=this.endPoint.x-this.startPoint.x,this.deltaY=this.endPoint.y-this.startPoint.y,this.x=this.deltaX,this.y=this.deltaY,this.vectorLength=Math.sqrt(Math.pow(this.deltaX,2)+Math.pow(this.deltaY,2)),Math.abs(this.deltaX)>Math.abs(this.deltaY)?this.startPoint.x<this.endPoint.x?this.direction=f.Right:this.startPoint.x>this.endPoint.x&&(this.direction=f.Left):this.startPoint.y<this.endPoint.y?this.direction=f.Down:this.startPoint.y>this.endPoint.y&&(this.direction=f.Up)}}class v{static getVector(e,t){const n=new M(e.clientX,e.clientY),i=new M(t.clientX,t.clientY);return new S(n,i)}static getSpeed(e,t,n){let i=0;const o=(n-t)/1e3;return e!=null&&o!=0&&(i=e.vectorLength/o),i}static calculateRotationAngle(e,t){const n=new S(e.startPoint,t.startPoint),i=new S(e.endPoint,t.endPoint),r=new M(0,0),o=new S(n.startPoint,r),a=this.translatePoint(n.endPoint,o),l=new S(i.startPoint,r),h=this.translatePoint(i.endPoint,l),p=this.calcAngleRad(a)*-1,c=h.x*Math.cos(p)-h.y*Math.sin(p),x=Math.round(h.x*Math.sin(p)+h.y*Math.cos(p));return Math.atan2(x,c)*180/Math.PI}static calculateVectorAngle(e,t){let n=0;if(e.vectorLength>0&&t.vectorLength>0){const i=(e.x*t.x+e.y*t.y)/(e.vectorLength*t.vectorLength),r=Math.acos(i);n=this.rad2deg(r)}return n}static translatePoint(e,t){const n=e.x+t.x,i=e.y+t.y;return new M(n,i)}static calcAngleDegrees(e){let t=Math.atan2(e.y,e.x)*180/Math.PI;return t<0&&(t=360+t),t}static calcAngleRad(e){let t=Math.atan2(e.y,e.x);return t<0&&(t=2*Math.PI+t),t}static deg2rad(e){return Math.PI/180*e}static rad2deg(e){return e/(Math.PI/180)}static getCenter(e,t){const n=(e.x+t.x)/2,i=(e.y+t.y)/2;return new M(n,i)}static getCenterMovementVector(e,t){const n=this.getCenter(e.startPoint,t.startPoint),i=this.getCenter(e.endPoint,t.endPoint);return new S(n,i)}static calculateDistanceChange(e,t){const n=new S(e.startPoint,t.startPoint);return new S(e.endPoint,t.endPoint).vectorLength-n.vectorLength}static calculateAbsoluteDistanceChange(e,t){const n=this.calculateDistanceChange(e,t);return Math.abs(n)}static calculateRelativeDistanceChange(e,t){const n=new S(e.startPoint,t.startPoint);return new S(e.endPoint,t.endPoint).vectorLength/n.vectorLength}}class y{constructor(e){this.pointer=e,this.parameters=e.parameters}getTarget(){return this.pointer.initialPointerEvent.target}getCurrentPointerEvent(){return this.pointer.currentPointerEvent}getCurrentDirection(){return this.parameters.live.vector.direction}onIdle(){}onPointerMove(e){}onPointerUp(e){}onPointerLeave(e){}onPointerCancel(e){}}let k;(function(s){s.Active="active",s.Removed="removed",s.Canceled="canceled"})(k||(k={}));class C{constructor(e,t){var l;this.options={DEBUG:!1,...t},this.DEBUG=this.options.DEBUG;const n=new Date().getTime();this.pointerId=e.pointerId,this.vectorTimespan=(l=this.options.vectorTimespan)!=null?l:100,this.initialPointerEvent=e,this.currentPointerEvent=e,this.recognizedEvents=[e],this.state=k.Active;const i=v.getVector(e,e),a={global:{startX:this.initialPointerEvent.clientX,startY:this.initialPointerEvent.clientY,vector:i,deltaX:0,deltaY:0,startTimestampUTC:n,startTimestamp:this.initialPointerEvent.timeStamp,currentTimestamp:this.initialPointerEvent.timeStamp,endTimestamp:null,maximumSpeed:0,currentSpeed:0,distance:0,maximumDistance:0,averageSpeed:0,finalSpeed:0,traveledDistance:0,hasBeenMoved:!1,duration:0},live:{duration:0,speed:0,vector:i,distance:0,isMoving:!1}};this.parameters=a}getTarget(){return this.initialPointerEvent.target}reset(){}onIdle(){const t=new Date().getTime()-this.parameters.global.startTimestampUTC;this.parameters.global.duration=t}onPointerMove(e){this.parameters.global.hasBeenMoved=!0,this.parameters.live.isMoving=!0,this.update(e)}onPointerUp(e){this.parameters.global.finalSpeed=this.parameters.live.speed,this.parameters.live.speed=0,this.parameters.live.isMoving=!1,this.state=k.Removed,this.parameters.global.endTimestamp=e.timeStamp,this.update(e),this.DEBUG===!0&&console.log(`[PointerInput] pointerdown ended. pointerdown duration: ${this.parameters.global.duration}ms`)}onPointerLeave(e){this.onPointerUp(e)}onPointerCancel(e){this.update(e),this.parameters.live.speed=0,this.state=k.Canceled,this.parameters.live.isMoving=!1,this.parameters.global.endTimestamp=e.timeStamp,this.DEBUG===!0&&console.log(`[PointerInput] canceled, pointerdown duration:${this.parameters.global.duration}ms`)}update(e){this.currentPointerEvent=e,this.recognizedEvents.push(e);const t=this.getTimedPointerEvents(),n=v.getVector(t[0],t[1]);this.parameters.live.vector=n,this.parameters.live.distance=n.vectorLength,this.parameters.live.speed=v.getSpeed(n,t[0].timeStamp,t[1].timeStamp),this.parameters.live.speed>this.parameters.global.maximumSpeed&&(this.parameters.global.maximumSpeed=this.parameters.live.speed),this.parameters.global.currentTimestamp=e.timeStamp,this.parameters.global.duration=e.timeStamp-this.parameters.global.startTimestamp,this.parameters.global.deltaX=n.endPoint.x-this.parameters.global.startX,this.parameters.global.deltaY=n.endPoint.y-this.parameters.global.startY;const i=v.getVector(this.initialPointerEvent,this.currentPointerEvent);this.parameters.global.vector=i,this.parameters.global.distance=i.vectorLength,i.vectorLength>this.parameters.global.maximumDistance&&(this.parameters.global.maximumDistance=i.vectorLength),this.DEBUG===!0&&(console.log(`[PointerInput] current speed: ${this.parameters.live.speed}px/s`),console.log(`[PointerInput] pointerdown duration: ${this.parameters.global.duration}ms`),console.log(`[PointerInput] live vector length within vectorTimespan: ${this.parameters.live.vector.vectorLength}px`))}getTimedPointerEvents(){let e=this.initialPointerEvent;const t=this.recognizedEvents[this.recognizedEvents.length-1];let n=this.recognizedEvents.length-1,i=0;const r=t.timeStamp;for(;i<this.vectorTimespan&&(n=n-1,!(n<0));)e=this.recognizedEvents[n],i=r-e.timeStamp;const o=[e,t];return this.recognizedEvents=this.recognizedEvents.slice(-20),o}}const N=globalThis.window;let Y;N!=null&&N.CustomEvent?Y=N.CustomEvent:Y=class extends Event{constructor(e,t){super(e,t),this.detail=t==null?void 0:t.detail}initCustomEvent(){throw new Error("Unsupported deprecated method")}};class re extends Y{}class ue{constructor(e,t){this.state=g.Inactive,this.validPointerManagerState=null,this.validPointerInputConstructor=y,this.domElement=e,this.initialPointerEvent=null,this.initialParameters=null,this.activeStateParameters=null,this.options={bubbles:!0,blocks:[],supportedDirections:[],supportedButtons:[],DEBUG:!1,...t},this.DEBUG=this.options.DEBUG}getEmptyGestureParameters(){return{global:{min:{},max:{},boolean:{}},live:{min:{},max:{},boolean:{}}}}getGestureParameters(){let e;if(this.state==g.Active?(e=this.activeStateParameters,this.DEBUG==!0&&(console.log(`[${this.eventBaseName}] validating using activeStateParameters`),console.log(e))):(this.DEBUG==!0&&console.log(`[${this.eventBaseName}] validating using initialParameters`),e=this.initialParameters),e==null)throw new Error("[Gesture] no gesture parameters found. Do not call .getGestureParameters on abstract class Gesture");return e}validateGestureParameters(e){const t=this.getGestureParameters();let n=!0,i;for(i in t){const r=t[i],o=e.parameters[i];let a;for(a in r){const l=r[a];let h;for(h in l){const p=l[h],c=o[h];if(this.DEBUG==!0&&console.log(`[${this.eventBaseName}] validating ${i} ${a}: required: ${p}, pointer: ${c}`),typeof p=="boolean"&&typeof c=="boolean"?n=this.validateBooleanParameter(p,c):typeof p=="number"&&typeof c=="number"&&(n=this.validateMinMaxParameter(p,c,a)),n==!1)return this.DEBUG==!0&&console.log(`[${this.eventBaseName}] invalidated `),!1}}}return!0}validateBooleanParameter(e,t){return e==null?!0:e==t?(this.DEBUG==!0&&console.log(`validated: required value: ${e}, current value: ${t}`),!0):(this.DEBUG==!0&&console.log(`dismissing ${this.eventBaseName}: required value: ${e}, current value: ${t}`),!1)}validateMinMaxParameter(e,t,n){if(n=="min"){if(t>=e)return!0}else if(n=="max"&&t<=e)return!0;return!1}validateDirection(e){const t=e.getCurrentDirection();return this.options.supportedDirections.length&&!this.options.supportedDirections.includes(t)?(this.DEBUG==!0&&console.log(`[Gestures] dismissing ${this.eventBaseName}: supported directions: ${this.options.supportedDirections}, current direction: ${t}`),!1):!0}validateGestureState(){return this.state!=g.Blocked}validatePointerManagerState(e){return e.state==this.validPointerManagerState?!0:(this.DEBUG==!0&&console.log(`[Gesture] PointerManagerState invalidated ${this.eventBaseName}: ${e.state}`),!1)}validatePointerInputConstructor(e){return e instanceof this.validPointerInputConstructor?!0:(this.DEBUG==!0&&console.log(`[Gesture] PointerInputConstructor invalidated ${this.eventBaseName}: ${this.validPointerInputConstructor}`),!1)}validate(e){let t=this.validateGestureState();t==!0&&(t=this.validatePointerManagerState(e));const n=e.activePointerInput;return t==!0&&n!=null&&(t=this.validatePointerInputConstructor(n),t==!0&&(t=this.validateDirection(n)),t==!0&&(t=this.validateGestureParameters(n))),t}recognize(e){const t=this.validate(e);t==!0&&this.state==g.Inactive&&this.onStart(e),t==!0&&this.state==g.Active?(this.initialPointerEvent==null&&this.setInitialPointerEvent(e),this.emit(e)):this.state==g.Active&&t==!1?this.onEnd(e):this.DEBUG==!0&&console.log(`not firing event ${this.eventBaseName}. No SinglePointerInput found`)}getPointerInput(e){if(e.hasPointersOnSurface()==!0&&e.activePointerInput instanceof this.validPointerInputConstructor)return e.activePointerInput;if(e.lastRemovedPointer instanceof C){const t=e.getlastRemovedPointerInput();if(t instanceof this.validPointerInputConstructor)return t}return null}setInitialPointerEvent(e){const t=this.getPointerInput(e);if(t instanceof this.validPointerInputConstructor){const n=t.getCurrentPointerEvent();this.initialPointerEvent=n}}emit(e,t){t=t||this.eventBaseName,this.DEBUG===!0&&console.log(`[Gestures] detected and firing event ${t}`);const n=this.getPointerInput(e);if(n!=null){const i=n.getTarget();if(i instanceof EventTarget){const r=this.getEventData(n,e),o={detail:r,bubbles:this.options.bubbles};this.DEBUG===!0&&console.log(o);const a=new re(t,o);o.bubbles==!0?i.dispatchEvent(a):this.domElement.dispatchEvent(a);const l=r.live.direction;if(!!this.options.supportedDirections==!0&&l!=f.None&&(t==this.eventBaseName||t=="swipe"))for(let p=0;p<this.options.supportedDirections.length;p++){const c=this.options.supportedDirections[p];if(c==l){const x=t+c;this.DEBUG==!0&&console.log(`[Gestures] detected and firing event ${x}`);const b=new re(x,o);o.bubbles==!0?i.dispatchEvent(b):this.domElement.dispatchEvent(b)}}}}}onStart(e){this.blockGestures(),this.state=g.Active,this.setInitialPointerEvent(e);const t=`${this.eventBaseName}start`;this.emit(e,t)}onEnd(e){this.unblockGestures(),this.DEBUG==!0&&console.log(`[${this.eventBaseName}] ended. Setting ${this.eventBaseName}.state = ${g.Inactive}`),this.state=g.Inactive;const t=`${this.eventBaseName}end`;this.emit(e,t)}onTouchStart(e){}onTouchMove(e){}onTouchEnd(e){}onTouchCancel(e){}block(e){this.options.blocks.indexOf(e)==-1&&this.options.blocks.push(e)}unblock(e){this.options.blocks.indexOf(e)!=-1&&this.options.blocks.splice(this.options.blocks.indexOf(e),1)}blockGestures(){for(let e=0;e<this.options.blocks.length;e++){const t=this.options.blocks[e];t.state==g.Inactive&&(this.DEBUG==!1&&console.log(`[Gesture] blocking ${t.eventBaseName}`),t.state=g.Blocked)}}unblockGestures(){for(let e=0;e<this.options.blocks.length;e++){const t=this.options.blocks[e];t.state=g.Inactive}}getEventData(e,t){throw new Error("Gesture subclasses require a getEventData method()")}}class j extends ue{constructor(e,t){super(e,t),this.initialPointerEvent=null,this.validPointerManagerState=w.SinglePointer;const n=this.getEmptyGestureParameters();this.initialParameters={...n},this.activeStateParameters=JSON.parse(JSON.stringify({...n}))}getEventData(e,t){const n=e.parameters.live,i=e.parameters.live;let r=n.vector,o=n.duration;if(this.initialPointerEvent!=null){const p=new M(this.initialPointerEvent.clientX,this.initialPointerEvent.clientY),c=new M(e.pointer.currentPointerEvent.clientX,e.pointer.currentPointerEvent.clientY);r=new S(p,c),o=e.pointer.currentPointerEvent.timeStamp-this.initialPointerEvent.timeStamp}const a={deltaX:r.x,deltaY:r.y,distance:r.vectorLength,speedX:r.x/o,speedY:r.y/o,speed:r.vectorLength/o,direction:r.direction,scale:1,rotation:0,center:{x:n.vector.endPoint.x,y:n.vector.endPoint.y},srcEvent:e.pointer.currentPointerEvent},l={deltaX:i.vector.x,deltaY:i.vector.y,distance:i.vector.vectorLength,speedX:i.vector.x/e.pointer.vectorTimespan,speedY:i.vector.y/e.pointer.vectorTimespan,speed:i.speed,direction:i.vector.direction,scale:1,rotation:0,center:{x:i.vector.endPoint.x,y:i.vector.endPoint.y},srcEvent:e.pointer.currentPointerEvent};return{recognizer:this,global:a,live:l,pointerManager:t}}validateButton(e){if(this.options.supportedButtons.length>0){const t=e.activePointerInput,n=e.lastRemovedPointer;let i=null;if(t!=null?i=t.getCurrentPointerEvent():n!=null&&(i=n.currentPointerEvent),i!=null&&i.pointerType=="mouse"&&this.options.supportedButtons.indexOf(i.buttons)==-1)return this.DEBUG==!0&&console.log(`dismissing ${this.eventBaseName}: supportedButtons: ${this.options.supportedButtons.toString()}, poinerEvent.buttons: ${i.buttons}`),!1}return!0}validate(e){let t=this.validateButton(e);return t==!0&&(t=super.validate(e)),t}}class lt extends j{constructor(e,t){super(e,t),this.validPointerManagerState=w.NoPointer,this.eventBaseName="tap";let n=200,i=30,r=30;t&&("maxDuration"in t&&(n=t.maxDuration),"maxDistance"in t&&(i=t.maxDistance,r=t.maxDistance)),this.initialParameters.global.max.duration=n,this.initialParameters.live.max.distance=i,this.initialParameters.global.max.distance=r}validateButton(e){if(this.options.supportedButtons.length>0){const t=e.lastRemovedPointer;if(t!=null){const n=t.currentPointerEvent;if(n.pointerType=="mouse"&&this.options.supportedButtons.indexOf(n.button)==-1)return this.DEBUG==!0&&console.log(`dismissing ${this.eventBaseName}: supportedButtons: ${this.options.supportedButtons.toString()}, poinerEvent.button: ${n.button}`),!1}}return!0}validate(e){let t=this.validateGestureState();if(t==!0&&(t=this.validatePointerManagerState(e)),t==!0&&(t=this.validateButton(e)),t===!0){if(e.lastInputSessionPointerCount!=1)return!1;{const n=e.getlastRemovedPointerInput();n instanceof y?t=this.validateGestureParameters(n):t=!1}}return t}onStart(e){this.setInitialPointerEvent(e),this.emit(e)}}const J=class extends j{constructor(e,t){super(e,t),this.eventBaseName="press";let n=600,i=10,r=20;t&&("minDuration"in t&&(n=t.minDuration),"maxDistance"in t&&(r=t.maxDistance,i=t.maxDistance)),this.initialParameters.global.min.duration=n,this.initialParameters.global.max.distance=i,this.initialParameters.global.max.maximumDistance=r,this.hasBeenEmitted=!1}recognize(e){const t=this.validate(e),n=this.getPointerInput(e),i=this.initialParameters.global.min.duration||J.minDuration;if(n instanceof y)if(t==!0&&this.hasBeenEmitted==!1)this.setInitialPointerEvent(e),this.emit(e),this.hasBeenEmitted=!0,this.state=g.Active,this.blockGestures();else if(t==!1&&this.hasBeenEmitted==!0)this.onEnd(e),this.state=g.Inactive,this.hasBeenEmitted=!1;else{const r=n.parameters.global.duration;this.hasBeenEmitted==!0&&r<=i&&(this.hasBeenEmitted=!1)}n==null&&(this.hasBeenEmitted=!1)}};let O=J;Z(O,"minDuration",600);class de extends j{constructor(e,t){var n;super(e,t),this.validPointerManagerState=w.SinglePointer,this.eventBaseName="pan",this.initialParameters.global.min.duration=0,this.initialParameters.live.min.distance=10,this.initialParameters.global.boolean.hasBeenMoved=!0,this.swipeFinalSpeed=600,this.isSwipe=!1,this.options.supportedDirections=(n=t==null?void 0:t.supportedDirections)!=null?n:z.All,this.initialSupportedDirections=this.options.supportedDirections}validate(e){return this.state==g.Active&&(this.options.supportedDirections=z.All),super.validate(e)}onStart(e){this.isSwipe=!1,super.onStart(e)}onEnd(e){const t=e.getlastRemovedPointerInput();t instanceof y&&(this.swipeFinalSpeed<t.parameters.global.finalSpeed&&t.parameters.live.vector.direction!=f.None?(this.isSwipe=!0,this.emit(e,"swipe")):this.DEBUG==!0&&(t.parameters.global.finalSpeed<this.swipeFinalSpeed?console.log(`[Pan] dismissing swipe. Final speed: ${t.parameters.global.finalSpeed} < ${this.swipeFinalSpeed}`):console.log(`[Pan] dismissing swipe. Direction: ${t.parameters.live.vector.direction}`))),super.onEnd(e),this.options.supportedDirections=this.initialSupportedDirections}onTouchMove(e){this.state==g.Active&&(this.DEBUG==!0&&console.log("[Pan] preventing touchmove default"),e.preventDefault(),e.stopPropagation())}}class F{constructor(e,t){this.pointerIds=new Set([e.pointerId,t.pointerId]),this.startTimestamp=new Date().getTime(),this.pointerMap={},this.pointerMap[e.pointerId]=e,this.pointerMap[t.pointerId]=t,this.pointer_1=e,this.pointer_2=t,this.initialPointerEvent=e.initialPointerEvent,this.currentPointerEvent=e.initialPointerEvent;const n=this.pointer_1.parameters.global.vector,i=this.pointer_2.parameters.global.vector,r=v.getCenter(n.startPoint,i.startPoint),o=v.getCenterMovementVector(n,i),a={duration:0,center:r,centerHasBeenMoved:!1,centerMovementDistance:0,centerMovementVector:o,absolutePointerDistanceChange:0,relativePointerDistanceChange:0,rotationAngle:0,absoluteRotationAngle:0,vectorAngle:0,absoluteVectorAngle:0},l=this.pointer_1.parameters.live.vector,h=this.pointer_2.parameters.live.vector,p=v.getCenter(l.startPoint,h.startPoint),c=v.getCenterMovementVector(l,h),b={global:a,live:{center:p,centerIsMoving:!1,centerMovementDistance:0,centerMovementVector:c,absolutePointerDistanceChange:0,relativePointerDistanceChange:0,rotationAngle:0,absoluteRotationAngle:0,vectorAngle:0,absoluteVectorAngle:0}};this.parameters=b}removePointer(e){if(e==this.pointer_1.pointerId)return this.pointer_2;if(e==this.pointer_2.pointerId)return this.pointer_1;throw new Error(`[DualPointerInput] cannot remove Pointer #${e}. The pointer is not part of this DualPointerInput`)}getTarget(){return this.initialPointerEvent.target}update(e){e instanceof PointerEvent&&(this.currentPointerEvent=e);const t=new Date().getTime();this.parameters.global.duration=t-this.startTimestamp;const n=this.pointer_1.parameters.global.vector,i=this.pointer_2.parameters.global.vector,r=v.getCenter(n.startPoint,i.startPoint),o=v.getCenterMovementVector(n,i),a=v.calculateAbsoluteDistanceChange(n,i),l=v.calculateRelativeDistanceChange(n,i),h=v.calculateRotationAngle(n,i),p=v.calculateVectorAngle(n,i);this.parameters.global.center=r,this.parameters.global.centerMovementVector=o,this.parameters.global.centerMovementDistance=o.vectorLength,this.parameters.global.absolutePointerDistanceChange=a,this.parameters.global.relativePointerDistanceChange=l,this.parameters.global.rotationAngle=h,this.parameters.global.absoluteRotationAngle=Math.abs(h),this.parameters.global.vectorAngle=p,this.parameters.global.absoluteVectorAngle=Math.abs(p);const c=this.pointer_1.parameters.live.vector,x=this.pointer_2.parameters.live.vector,b=v.getCenter(c.startPoint,x.startPoint),D=v.getCenterMovementVector(c,x),$=v.calculateAbsoluteDistanceChange(c,x),K=v.calculateRelativeDistanceChange(c,x),Q=v.calculateRotationAngle(c,x),W=v.calculateVectorAngle(c,x);D.vectorLength>0?(this.parameters.live.centerIsMoving=!0,this.parameters.global.centerHasBeenMoved=!0):this.parameters.live.centerIsMoving=!1,this.parameters.live.center=b,this.parameters.live.centerMovementDistance=D.vectorLength,this.parameters.live.centerMovementVector=D,this.parameters.live.absolutePointerDistanceChange=$,this.parameters.live.relativePointerDistanceChange=K,this.parameters.live.rotationAngle=Q,this.parameters.live.absoluteRotationAngle=Math.abs(Q),this.parameters.live.vectorAngle=W,this.parameters.live.absoluteVectorAngle=Math.abs(W)}onPointerMove(e){this.update(e)}onPointerUp(e){this.update(e)}onPointerLeave(e){this.update(e)}onPointerCancel(e){this.update(e)}onIdle(){this.update()}getCurrentDirection(){return this.parameters.live.centerMovementVector.direction}getCurrentPointerEvent(){return this.currentPointerEvent}}class q extends ue{constructor(e,t){super(e,t),this.initialPointerEvent_1=null,this.initialPointerEvent_2=null,this.validPointerManagerState=w.DualPointer,this.validPointerInputConstructor=F;const n=this.getEmptyGestureParameters();this.initialParameters={...n},this.activeStateParameters=JSON.parse(JSON.stringify({...n}))}getEventData(e,t){const n=e.parameters.global,i=e.parameters.live,r={deltaX:n.centerMovementVector.x,deltaY:n.centerMovementVector.y,distance:n.centerMovementDistance,speedX:n.centerMovementVector.x/n.duration,speedY:n.centerMovementVector.y/n.duration,speed:n.centerMovementVector.vectorLength/n.duration,direction:n.centerMovementVector.direction,scale:n.relativePointerDistanceChange,rotation:n.rotationAngle,center:n.center,srcEvent:e.currentPointerEvent},o={deltaX:i.centerMovementVector.x,deltaY:i.centerMovementVector.y,distance:i.centerMovementDistance,speedX:i.centerMovementVector.x/n.duration,speedY:i.centerMovementVector.y/n.duration,speed:i.centerMovementVector.vectorLength/n.duration,direction:i.centerMovementVector.direction,scale:i.relativePointerDistanceChange,rotation:i.rotationAngle,center:{x:i.centerMovementVector.startPoint.x,y:i.centerMovementVector.startPoint.y},srcEvent:e.currentPointerEvent};return{recognizer:this,global:r,live:o,pointerManager:t}}}class ct extends q{constructor(e,t){super(e,t),this.eventBaseName="pinch",this.initialParameters.live.min.centerMovementDistance=0,this.initialParameters.live.max.centerMovementDistance=50,this.initialParameters.live.min.absolutePointerDistanceChange=5,this.initialParameters.live.max.absoluteRotationAngle=20,this.initialParameters.live.min.absoluteVectorAngle=10}}class ut extends q{constructor(e,t){super(e,t),this.eventBaseName="rotate",this.initialParameters.live.min.centerMovementDistance=0,this.initialParameters.live.max.centerMovementDistance=50,this.initialParameters.live.max.absolutePointerDistanceChange=50,this.initialParameters.live.min.absoluteRotationAngle=5,this.activeStateParameters.live.min.absoluteRotationAngle=0}}class dt extends q{constructor(e,t){super(e,t),this.eventBaseName="twofingerpan",this.initialParameters.live.min.centerMovementDistance=10,this.initialParameters.live.max.absolutePointerDistanceChange=50,this.initialParameters.live.max.absoluteVectorAngle=150,this.activeStateParameters.live.min.centerMovementDistance=0}}class ht{constructor(e){e=e||{},this.options={DEBUG:!1,...e},this.DEBUG=this.options.DEBUG,this.state=w.NoPointer,this.activePointerInput=null,this.lastRemovedPointer=null,this.lastInputSessionPointerCount=0,this.pointerAllocation={},this.unusedPointers={},this.onSurfacePointers={}}addPointer(e){this.DEBUG==!0&&console.log(`[PointerManager] adding Pointer #${e.pointerId.toString()}`);const t={DEBUG:this.DEBUG},n=new C(e,t);this.onSurfacePointers[n.pointerId]=n,this.activePointerInput==null?this.setActiveSinglePointerInput(n):this.activePointerInput instanceof y?this.setActiveDualPointerInput(this.activePointerInput.pointer,n):this.activePointerInput instanceof F&&(this.unusedPointers[n.pointerId]=n),this.lastInputSessionPointerCount=this.currentPointerCount()}removePointer(e){this.DEBUG==!0&&(console.log(`[PointerManager] starting to remove Pointer #${e}`),console.log(`[PointerManager] state: ${this.state}`));const t=this.onSurfacePointers[e];if(this.lastRemovedPointer=t,delete this.onSurfacePointers[e],e in this.unusedPointers&&delete this.unusedPointers[e],this.activePointerInput instanceof F){if(this.activePointerInput.pointerIds.has(e)){this.DEBUG==!0&&console.log(`[PointerManager] removing Pointer #${e} from DualPointerInput`);const n=this.activePointerInput.removePointer(e);this.activePointerInput=null;const i=this.getUnusedPointer();i instanceof C?this.setActiveDualPointerInput(n,i):this.setActiveSinglePointerInput(n)}}else if(this.activePointerInput instanceof y){if(this.DEBUG==!0&&console.log(`[PointerManager] removing Pointer #${e} from SinglePointerInput`),this.activePointerInput=null,this.state=w.NoPointer,Object.keys(this.unusedPointers).length>0)throw this.unusedPointers={},new Error("[PointerManager] found unused Pointers although there should not be any");if(Object.keys(this.onSurfacePointers).length>0)throw this.onSurfacePointers={},new Error("[PointerManager] found onSurfacePointers although there should not be any")}this.DEBUG==!0&&console.log(`[PointerManager] state: ${this.state}`)}setActiveSinglePointerInput(e){e.reset();const t=new y(e);this.activePointerInput=t,this.pointerAllocation[e.pointerId]=t,delete this.unusedPointers[e.pointerId],this.state=w.SinglePointer,this.DEBUG==!0&&console.log(`[PointerManager] state: ${this.state}`)}setActiveDualPointerInput(e,t){e.reset(),t.reset();const n=new F(e,t);this.activePointerInput=n,this.pointerAllocation[e.pointerId]=n,this.pointerAllocation[t.pointerId]=n,delete this.unusedPointers[e.pointerId],delete this.unusedPointers[t.pointerId],this.state=w.DualPointer,this.DEBUG==!0&&console.log(`[PointerManager] state: ${this.state}`)}hasPointersOnSurface(){return Object.keys(this.onSurfacePointers).length>0}currentPointerCount(){return Object.keys(this.onSurfacePointers).length}getUnusedPointer(){return Object.keys(this.unusedPointers).length>0?Object.values(this.unusedPointers)[0]:null}getPointerFromId(e){return e in this.onSurfacePointers?this.onSurfacePointers[e]:null}getlastRemovedPointerInput(){return this.lastRemovedPointer instanceof C?this.pointerAllocation[this.lastRemovedPointer.pointerId]:null}onIdle(){var e;for(const t in this.onSurfacePointers)this.onSurfacePointers[t].onIdle();(e=this.activePointerInput)==null||e.onIdle()}onPointerMove(e){var n;const t=this.getPointerFromId(e.pointerId);t instanceof C&&t.onPointerMove(e),(n=this.activePointerInput)==null||n.onPointerMove(e)}onPointerUp(e){var n;this.DEBUG==!0&&console.log("[PointerManager] pointerup detected");const t=this.getPointerFromId(e.pointerId);t instanceof C&&t.onPointerUp(e),(n=this.activePointerInput)==null||n.onPointerUp(e),this.removePointer(e.pointerId)}onPointerCancel(e){var n;this.DEBUG==!0&&console.log("[PointerManager] pointercancel detected");const t=this.getPointerFromId(e.pointerId);t instanceof C&&t.onPointerCancel(e),(n=this.activePointerInput)==null||n.onPointerCancel(e),this.removePointer(e.pointerId)}}const pt=[lt,O,de,ct,ut,dt];class vt{constructor(e,t){var o;this.state=I.NoActiveGesture,this.activeGestures=[],this.hadActiveGestureDuringCurrentContact=!1,this.gestureEventHandlers={},this.lastRecognitionTimestamp=null,this.idleRecognitionIntervalId=null,this.pointerEventHandlers={},this.touchEventHandlers={},t=t||{},this.options={DEBUG:!1,DEBUG_GESTURES:!1,DEBUG_POINTERMANAGER:!1,bubbles:!0,handleTouchEvents:!0,consecutiveGestures:!0,simultaneousGestures:!0,supportedGestures:[],...t},this.DEBUG=this.options.DEBUG;const i=((o=t.supportedGestures)!=null?o:pt).map(a=>{if(typeof a=="function"){const l={bubbles:this.options.bubbles,DEBUG:this.options.DEBUG_GESTURES};return new a(e,l)}if(typeof a=="object")return a;throw new Error(`unsupported gesture type: ${typeof a}`)});this.supportedGestures=i,this.domElement=e;const r={DEBUG:this.options.DEBUG_POINTERMANAGER};this.pointerManager=new ht(r),this.addPointerEventListeners(),this.addTouchEventListeners()}addPointerEventListeners(){const e=this.domElement,t=this.onPointerDown.bind(this),n=this.onPointerMove.bind(this),i=this.onPointerUp.bind(this),r=this.onPointerCancel.bind(this);e.addEventListener("pointerdown",t,{passive:!0}),e.addEventListener("pointermove",n,{passive:!0}),e.addEventListener("pointerup",i,{passive:!0}),e.addEventListener("pointercancel",r,{passive:!0}),this.pointerEventHandlers={pointerdown:t,pointermove:n,pointerup:i,pointercancel:r}}onPointerDown(e){var t,n;this.DEBUG==!0&&console.log("[PointerListener] pointerdown event detected"),this.domElement.setPointerCapture(e.pointerId),this.pointerManager.addPointer(e),(n=(t=this.options).pointerdown)==null||n.call(t,e,this),this.idleRecognitionIntervalId!=null&&this.clearIdleRecognitionInterval(),this.idleRecognitionIntervalId=setInterval(()=>{this.onIdle()},100)}onPointerMove(e){var t,n;this.pointerManager.hasPointersOnSurface()==!0&&(this.pointerManager.onPointerMove(e),this.recognizeGestures(),(n=(t=this.options).pointermove)==null||n.call(t,e,this))}onPointerUp(e){var t,n;this.DEBUG==!0&&console.log("[PointerListener] pointerup event detected"),this.domElement.releasePointerCapture(e.pointerId),this.pointerManager.hasPointersOnSurface()==!0&&(this.pointerManager.onPointerUp(e),this.recognizeGestures(),(n=(t=this.options).pointerup)==null||n.call(t,e,this)),this.clearIdleRecognitionInterval()}onPointerCancel(e){var t,n;this.domElement.releasePointerCapture(e.pointerId),this.DEBUG==!0&&console.log("[PointerListener] pointercancel detected"),this.pointerManager.onPointerCancel(e),this.recognizeGestures(),this.clearIdleRecognitionInterval(),(n=(t=this.options).pointercancel)==null||n.call(t,e,this)}removePointerEventListeners(){for(const e in this.pointerEventHandlers){const t=this.pointerEventHandlers[e];this.domElement.removeEventListener(e,t)}}addTouchEventListeners(){if(this.options.handleTouchEvents==!0){const e=this.onTouchMove.bind(this);this.domElement.addEventListener("touchmove",e),this.touchEventHandlers.touchmove=e}}removeTouchEventListeners(){for(const e in this.touchEventHandlers){const t=this.touchEventHandlers[e];this.domElement.removeEventListener(e,t)}}onTouchMove(e){for(let t=0;t<this.supportedGestures.length;t++)this.supportedGestures[t].onTouchMove(e)}onIdle(){if(this.pointerManager.hasPointersOnSurface()==!1)this.clearIdleRecognitionInterval();else{const e=new Date().getTime();let t=null;this.lastRecognitionTimestamp!=null&&(t=e-this.lastRecognitionTimestamp),(t==null||t>100)&&(this.pointerManager.onIdle(),this.DEBUG==!0&&console.log("[PointerListener] onIdle - running idle recognition"),this.recognizeGestures())}}clearIdleRecognitionInterval(){this.idleRecognitionIntervalId!=null&&(clearInterval(this.idleRecognitionIntervalId),this.idleRecognitionIntervalId=null)}recognizeGestures(){this.lastRecognitionTimestamp=new Date().getTime();let e=this.supportedGestures;this.options.simultaneousGestures==!1&&this.state==I.ActiveGesture?e=[this.activeGestures[0]]:this.options.consecutiveGestures==!1&&this.state==I.ActiveGesture?e=[this.activeGestures[0]]:this.options.consecutiveGestures==!1&&this.state==I.NoActiveGesture&&this.hadActiveGestureDuringCurrentContact==!0&&this.pointerManager.hasPointersOnSurface()==!0&&(e=[]);for(let t=0;t<e.length;t++){const n=e[t];if(n.recognize(this.pointerManager),this.updateActiveGestures(n),this.options.simultaneousGestures==!1&&this.state==I.ActiveGesture)break}this.DEBUG==!0&&console.log(`[PointerListener] hadActiveGestureDuringCurrentContact: ${this.hadActiveGestureDuringCurrentContact}`),this.pointerManager.hasPointersOnSurface()==!1&&(this.hadActiveGestureDuringCurrentContact=!1)}updateActiveGestures(e){if(e.state==g.Active)this.hadActiveGestureDuringCurrentContact=!0,this.activeGestures.indexOf(e)<0&&this.activeGestures.push(e);else{const t=this.activeGestures.indexOf(e);t>=0&&this.activeGestures.splice(t,1)}this.activeGestures.length>0?this.state=I.ActiveGesture:this.state=I.NoActiveGesture}parseEventsString(e){return e.trim().split(/\s+/g)}on(e,t){const n=this.parseEventsString(e);for(let i=0;i<n.length;i++){const r=n[i];r in this.gestureEventHandlers||(this.gestureEventHandlers[r]=[]),this.gestureEventHandlers[r].indexOf(t)==-1&&this.gestureEventHandlers[r].push(t),this.domElement.addEventListener(r,t,{capture:!1,passive:!0})}}off(e,t){const n=this.parseEventsString(e);this.DEBUG==!0&&(console.log(`[PointerListener] turning off events: ${e}`),console.log(this.gestureEventHandlers));for(let i=0;i<n.length;i++){const r=n[i];if(r in this.gestureEventHandlers){const o=this.gestureEventHandlers[r],a=o.indexOf(t);this.DEBUG==!0&&console.log(`[PointerListener] turning off ${r}. Index on handlerList: ${a}`),a>=0&&(o.splice(a,1),this.gestureEventHandlers[r]=o),this.domElement.removeEventListener(r,t,!1)}}}destroy(){for(const e in this.gestureEventHandlers){const t=this.gestureEventHandlers[e];for(let n=0;n<t.length;n++){const i=t[n];this.domElement.removeEventListener(e,i)}delete this.gestureEventHandlers[e]}this.removePointerEventListeners(),this.removeTouchEventListeners()}}const mt=E({__name:"PanableGrid",emits:["pan-left","pan-right"],setup(s,{emit:e}){const t=B(),n=B(!1),i=B(0),r=B(0),o=T(()=>`translate3d(${i.value+r.value}px, 0, 0)`),a=function(c){n.value&&(r.value=c.detail.global.deltaX)},l=function(c){z.Horizontal.includes(c.detail.live.direction)&&screen.width<768&&(n.value=!0)},h=function(c){n.value&&(c.detail.recognizer.isSwipe&&(c.detail.global.direction==="left"?(i.value=-screen.width,e("pan-left")):(i.value=0,e("pan-right"))),r.value=0,n.value=!1)};let p=null;return me(()=>{if(t.value){const c=new de(t.value,{supportedDirections:z.Horizontal});p=new vt(t.value,{supportedGestures:[c]}),t.value.addEventListener("panleft",a),t.value.addEventListener("panright",a),t.value.addEventListener("panstart",l),t.value.addEventListener("panend",h)}}),ge(()=>{t.value&&(p==null||p.destroy(),t.value.removeEventListener("panleft",a),t.value.removeEventListener("panright",a),t.value.removeEventListener("panstart",l),t.value.removeEventListener("panend",h))}),(c,x)=>(u(),m("div",{ref_key:"panContainer",ref:t,class:R(["overflow-hidden grid grid-cols-2 w-[200vw] touch-pan-y",{"transition-transform":!P(n)}]),style:oe({transform:P(o)})},[ae(c.$slots,"default")],6))}}),gt={key:0,class:"h-full bg-[#CBCBCB18]"},ft={class:"h-full xl:container xl:mx-auto"},Pt={class:"identification-key__filters pt-4 px-8"},bt={class:"font-medium text-xl"},Et={class:"identification-key__results pt-4 px-8 md:bg-white md:shadow-xl md:shadow-neutral-50 md:px-4 lg:px-8 self-stretch"},xt=d("h2",{class:"font-bold text-2xl mt-2 mb-6"}," Ergebnis ",-1),Dt=d("p",{class:"mb-4"}," Verbleibende Auswahl... ",-1),$t={class:"flex flex-col gap-2"},yt=E({__name:"[slug]",async setup(s){let e,t;const n=fe(),i=Pe(),{natureguideid:r,slug:o}=n.params,a=Se();[e,t]=be(()=>a.loadNatureGuide(r)),await e,t(),a.loadNodeBySlug(`${o}`);const l=a.currentNode,h=B("filters"),p=Object.values(l.matrixFilters).sort((b,D)=>b.position>D.position?1:-1);Ee({titleTemplate(){return`${l.name} - Bestimmung - LakeExplorer`}});const c=async b=>{switch(b.nodeType){case"node":return await i.push({name:"nature-guide-natureguideid-slug",params:{natureguideid:n.params.natureguideid,slug:b.slug}});case"result":if(b.taxon)return await i.push({name:"taxon-profile-taxon-id",params:{taxonid:b.taxon.taxonSource,id:b.taxon.nameUuid}})}},x=()=>{a.currentNodeIsRootNode?i.push({name:"nature-guide"}):i.push({name:"nature-guide-natureguideid",params:{natureguideid:n.params.natureguideid}})};return(b,D)=>P(l)?(u(),m("div",gt,[d("div",ft,[G(xe,{onBack:x}),G(mt,{class:"md:grid-cols-[60%_40%] md:w-full lg:grid-cols-[62%_38%] xl:grid-cols-[67%_33%]",onPanLeft:D[0]||(D[0]=$=>h.value="results"),onPanRight:D[1]||(D[1]=$=>h.value="filters")},{default:L(()=>[d("div",Pt,[d("div",null,[d("h2",bt,A(P(l).name),1),(u(!0),m(U,null,V(P(p),$=>(u(),_(qe,{key:$.uuid,filter:$},null,8,["filter"]))),128))])]),d("div",Et,[xt,Dt,d("div",$t,[(u(!0),m(U,null,V(P(l).children,$=>(u(),_(Ge,{key:$.uuid,reference:$,onSelect:K=>c($)},null,8,["reference","onSelect"]))),128))])])]),_:1})]),G(at,{node:P(l),"tab-showing":P(h),onToggleTab:D[2]||(D[2]=$=>h.value=P(h)==="filters"?"results":"filters")},null,8,["node","tab-showing"])])):ce("",!0)}});export{yt as default};
